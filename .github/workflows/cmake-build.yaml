name: CMake

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build-macos:
    runs-on: macos-10.15
    steps:
      - name: Check out code
        uses: actions/checkout@main

      - name: Submodule
        working-directory: ${{github.workspace}}/
        run: git submodule update --init
        
      - name: Install compile_bullet
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_bullet.sh

      - name: Install compile_box2d
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_box2d.sh

      - name: Install compile_crossguid
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_crossguid.sh

      - name: Install compile_entt
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_entt.sh

      - name: Install compile_eigen
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_eigen.sh

      - name: Install compile_gli
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_gli.sh

      - name: Install compile_libsndfile
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_libsndfile.sh

      - name: Install compile_nlohmann_json
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_nlohmann_json.sh

      - name: Install compile_openal_soft
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_openal_soft.sh

      - name: Install compile_shaderc
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_shaderc.sh

      - name: Install compile_spdlog
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_spdlog.sh

      - name: Install compile_tinygltf
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_tinygltf.sh

      - name: Install compile_tinyobjloader
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_tinyobjloader.sh

      - name: Install compile_yaml_cpp
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_yaml_cpp.sh

      - name : Install glm
        working-directory: ${{github.workspace}}/
        run: mkdir -p External/'uname -s'/include/glm

      - name : Install glm
        working-directory: ${{github.workspace}}/
        run: cp -r Thirdparty/glm/glm/* External/'uname -s'/include/glm/

      - name: Build
        shell: bash
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_mac.sh

  build-win10:
    runs-on: windows-2019
    steps:
      - name: Check out code
        uses: actions/checkout@main

      - name: Submodule
        working-directory: ${{github.workspace}}/
        run: git submodule update --init
      
      - name: Install compile_bullet
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_bullet.bat

      - name: Install compile_box2d
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_box2d.bat

      - name: Install compile_crossguid
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_crossguid.bat

      - name: Install compile_entt
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_entt.bat

      - name: Install compile_eigen
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_eigen.bat

      - name: Install compile_gli
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_gli.bat

      - name: Install compile_libsndfile
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_libsndfile.bat

      - name: Install compile_nlohmann_json
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_nlohmann_json.bat

      - name: Install compile_openal_soft
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_openal_soft.bat

      - name: Install compile_shaderc
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_shaderc.bat

      - name: Install compile_spdlog
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_spdlog.bat

      - name: Install compile_tinygltf
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_tinygltf.bat

      - name: Install compile_tinyobjloader
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_tinyobjloader.bat

      - name: Install compile_yaml_cpp
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_yaml_cpp.bat

      - name : Install glm
        working-directory: ${{github.workspace}}/
        run: mkdir External\Windows\include\glm

      - name : Install glm
        working-directory: ${{github.workspace}}/
        run: xcopy Thirdparty\glm\glm\* External\Windows\include\glm\ /s/y

      - name: Build
        shell: bash
        working-directory: ${{github.workspace}}/
        run: ./Script/build_win.bat
      
  build-ubuntu:
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code
        uses: actions/checkout@main

      - name: Submodule
        working-directory: ${{github.workspace}}/
        run: git submodule update --init
        
      - name: Install compile_bullet
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_bullet.sh

      - name: Install compile_box2d
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_box2d.sh

      - name: Install compile_crossguid
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_crossguid.sh

      - name: Install compile_entt
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_entt.sh

      - name: Install compile_eigen
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_eigen.sh

      - name: Install compile_gli
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_gli.sh

      - name: Install compile_libsndfile
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_libsndfile.sh

      - name: Install compile_nlohmann_json
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_nlohmann_json.sh

      - name: Install compile_openal_soft
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_openal_soft.sh

      - name: Install compile_shaderc
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_shaderc.sh

      - name: Install compile_spdlog
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_spdlog.sh

      - name: Install compile_tinygltf
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_tinygltf.sh

      - name: Install compile_tinyobjloader
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_tinyobjloader.sh

      - name: Install compile_yaml_cpp
        working-directory: ${{github.workspace}}/
        run: ./Script/compile_yaml_cpp.sh

      - name : Install glm
        working-directory: ${{github.workspace}}/
        run: mkdir -p External/'uname -s'/include/glm

      - name : Install glm
        working-directory: ${{github.workspace}}/
        run: cp -r Thirdparty/glm/glm/* External/'uname -s'/include/glm/

      - name: Build
        shell: bash
        working-directory: ${{github.workspace}}/
        run: ./Script/build_linux.sh